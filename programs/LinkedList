package binderlist;

import java.util.*;

public class LinkedList<E>
{
   private Node first;
   
   class Node
   {
      E data;
      Node next;
   }

   public E getFirst() {
      if (first == null) {
         throw new NoSuchElementException();
      }
      return first.data;
   }
   
   class LinkedListIterator<F> implements ListIterator<F>
   {

      @Override
      public void add(F e)
      {
         // TODO Auto-generated method stub
         
      }

      @Override
      public boolean hasNext()
      {
         // TODO Auto-generated method stub
         return false;
      }

      @Override
      public boolean hasPrevious()
      {
         // TODO Auto-generated method stub
         return false;
      }

      @Override
      public F next()
      {
         // TODO Auto-generated method stub
         return null;
      }

      @Override
      public int nextIndex()
      {
         // TODO Auto-generated method stub
         return 0;
      }

      @Override
      public F previous()
      {
         // TODO Auto-generated method stub
         return null;
      }

      @Override
      public int previousIndex()
      {
         // TODO Auto-generated method stub
         return 0;
      }

      @Override
      public void remove()
      {
         // TODO Auto-generated method stub
         
      }

      @Override
      public void set(F e)
      {
         // TODO Auto-generated method stub
         
      }
   }
}
